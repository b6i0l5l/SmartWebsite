{"ast":null,"code":"var _jsxFileName = \"/Users/wan/smartplug/src/App.js\";\n// import React from 'react';\n// import SpeechRecognition from 'react-speech-recognition'\n// import { PropTypes, Component } from 'react'\n// import logo from './logo.svg';\n// import './App.css';\n//\n//\n// class Dictaphone extends Component {\n//   reset(){\n//\n//   }\n//   componentWillMount() {\n//     const {recognition} = this.props\n//     recognition.lang = 'zh-CN'\n//   }\n//   render() {\n//     const { transcript, resetTranscript, browserSupportsSpeechRecognition } = this.props\n//\n//     if (!browserSupportsSpeechRecognition) {\n//       return null\n//     }\n//\n//     return (\n//         <div className=\"App\">\n//           <header className=\"App-header\">\n//             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//             <p>\n//               you can try it!\n//             </p>\n//             <button onClick={resetTranscript}>Reset</button>\n//             <span>{transcript}</span>\n//           </header>\n//\n//         </div>\n//     )\n//   }\n// }\n//\n// export default SpeechRecognition(Dictaphone)\nimport React, { Component } from 'react';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n\n    this.getData = () => {\n      fetch('/endpoint').then(response => response.json()).then(data => {\n        this.setState({\n          data: [...data]\n        }); // call getData() again in 5 seconds\n\n        this.intervalID = setTimeout(this.getData.bind(this), 5000);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillUnmount() {\n    /*\n      stop getData() from continuing to run even\n      after unmounting this component. Notice we are calling\n      'clearTimeout()` here rather than `clearInterval()` as\n      in the previous example.\n    */\n    clearTimeout(this.intervalID);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Our fancy dashboard lives here.\");\n  }\n\n}","map":{"version":3,"sources":["/Users/wan/smartplug/src/App.js"],"names":["React","Component","Dashboard","state","data","getData","fetch","then","response","json","setState","intervalID","setTimeout","bind","componentDidMount","componentWillUnmount","clearTimeout","render"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAGhCE,KAHgC,GAGxB;AACNC,MAAAA,IAAI,EAAE;AADA,KAHwB;;AAAA,SAqBhCC,OArBgC,GAqBtB,MAAM;AACdC,MAAAA,KAAK,CAAC,WAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUH,IAAI,IAAI;AACZ,aAAKM,QAAL,CAAc;AAAEN,UAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ;AAAR,SAAd,EADY,CAEZ;;AACA,aAAKO,UAAL,GAAkBC,UAAU,CAAC,KAAKP,OAAL,CAAaQ,IAAb,CAAkB,IAAlB,CAAD,EAA0B,IAA1B,CAA5B;AACD,OANL;AAOD,KA7B+B;AAAA;;AAOhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,OAAL;AACD;;AAEDU,EAAAA,oBAAoB,GAAG;AACrB;;;;;;AAMAC,IAAAA,YAAY,CAAC,KAAKL,UAAN,CAAZ;AACD;;AAYDM,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ;AAKD;;AArC+B","sourcesContent":["// import React from 'react';\n// import SpeechRecognition from 'react-speech-recognition'\n// import { PropTypes, Component } from 'react'\n// import logo from './logo.svg';\n// import './App.css';\n//\n//\n// class Dictaphone extends Component {\n//   reset(){\n//\n//   }\n//   componentWillMount() {\n//     const {recognition} = this.props\n//     recognition.lang = 'zh-CN'\n//   }\n//   render() {\n//     const { transcript, resetTranscript, browserSupportsSpeechRecognition } = this.props\n//\n//     if (!browserSupportsSpeechRecognition) {\n//       return null\n//     }\n//\n//     return (\n//         <div className=\"App\">\n//           <header className=\"App-header\">\n//             <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//             <p>\n//               you can try it!\n//             </p>\n//             <button onClick={resetTranscript}>Reset</button>\n//             <span>{transcript}</span>\n//           </header>\n//\n//         </div>\n//     )\n//   }\n// }\n//\n// export default SpeechRecognition(Dictaphone)\nimport React, { Component } from 'react';\n\nclass Dashboard extends Component {\n  intervalID;\n\n  state = {\n    data: [],\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  componentWillUnmount() {\n    /*\n      stop getData() from continuing to run even\n      after unmounting this component. Notice we are calling\n      'clearTimeout()` here rather than `clearInterval()` as\n      in the previous example.\n    */\n    clearTimeout(this.intervalID);\n  }\n\n  getData = () => {\n    fetch('/endpoint')\n        .then(response => response.json())\n        .then(data => {\n          this.setState({ data: [...data] });\n          // call getData() again in 5 seconds\n          this.intervalID = setTimeout(this.getData.bind(this), 5000);\n        });\n  }\n\n  render() {\n    return (\n        <div>\n          Our fancy dashboard lives here.\n        </div>\n    );\n  }\n}\n "]},"metadata":{},"sourceType":"module"}