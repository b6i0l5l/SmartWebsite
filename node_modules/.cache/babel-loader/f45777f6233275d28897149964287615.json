{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/wan/smartplug/src/App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport './App.css'; //------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'zh-TW'; //------------------------COMPONENT-----------------------------\n\nclass Speech extends Component {\n  constructor() {\n    super();\n    this.state = {\n      listening: false\n    };\n    this.toggleListen = this.toggleListen.bind(this);\n    this.handleListen = this.handleListen.bind(this);\n  }\n\n  toggleListen() {\n    this.setState({\n      listening: !this.state.listening\n    }, this.handleListen);\n  }\n\n  handleListen() {\n    console.log('listening?', this.state.listening);\n\n    if (this.state.listening) {\n      recognition.start();\n\n      recognition.onend = () => {\n        console.log(\"...continue listening...\");\n        recognition.start();\n      };\n    } else {\n      recognition.stop();\n\n      recognition.onend = () => {\n        console.log(\"Stopped listening per click\");\n      };\n    }\n\n    recognition.onstart = () => {\n      console.log(\"Listening!\");\n    };\n\n    let intermiTranscript = '';\n\n    recognition.onresult = event => {\n      let finalTranscript = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) intermiTranscript += transcript + ' ';else finalTranscript += transcript; // interimTranscript += transcript;\n      }\n\n      console.log(finalTranscript);\n      document.getElementById('final').innerHTML = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n      const transcriptArr = finalTranscript.split(' ');\n      const stopCmd = transcriptArr.slice(-3, -1);\n      console.log('stopCmd', stopCmd);\n\n      if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n        recognition.stop();\n\n        recognition.onend = () => {\n          console.log('Stopped listening per command');\n          const finalText = transcriptArr.slice(0, -3).join(' ');\n          document.getElementById('final').innerHTML = finalText;\n        };\n      }\n    }; //-----------------------------------------------------------------------\n\n\n    recognition.onerror = event => {\n      console.log(\"Error occurred in recognition: \" + event.error);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      style: reactlogo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"microphone-btn\",\n      style: button,\n      onClick: this.toggleListen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"final\",\n      style: final,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default Speech; //-------------------------CSS------------------------------------\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  button: {\n    width: '60px',\n    height: '60px',\n    background: 'blue',\n    alignItems: 'center' // borderRadius: '50%',\n    // margin: '6em 0 2em 0'\n\n  },\n  reactlogo: {\n    background: 'gray',\n    alignItems: 'center'\n  },\n  // interim: {\n  //   color: 'gray',\n  //   border: '#ccc 1px solid',\n  //   padding: '1em',\n  //   margin: '1em',\n  //   width: '300px'\n  // },\n  final: {\n    color: 'black',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  }\n};\nconst {\n  container,\n  button,\n  interim,\n  final,\n  reactlogo\n} = styles;","map":{"version":3,"sources":["/Users/wan/smartplug/src/App.js"],"names":["React","Component","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","Speech","constructor","state","listening","toggleListen","bind","handleListen","setState","console","log","start","onend","stop","onstart","intermiTranscript","onresult","event","finalTranscript","i","resultIndex","results","length","transcript","isFinal","document","getElementById","innerHTML","transcriptArr","split","stopCmd","slice","finalText","join","onerror","error","render","logo","reactlogo","button","final","styles","container","display","flexDirection","alignItems","textAlign","width","height","background","color","border","padding","margin","interim"],"mappings":"AAAA;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,WAAP,C,CAGA;;AAEA,MAAMC,iBAAiB,GAAGC,MAAM,CAACD,iBAAP,IAA4BC,MAAM,CAACC,uBAA7D;AACA,MAAMC,WAAW,GAAG,IAAIH,iBAAJ,EAApB;AAEAG,WAAW,CAACC,SAAZ,GAAwB,IAAxB;AACAD,WAAW,CAACE,cAAZ,GAA6B,IAA7B;AACAF,WAAW,CAACG,IAAZ,GAAmB,OAAnB,C,CAGA;;AAEA,MAAMC,MAAN,SAAqBR,SAArB,CAA+B;AAE7BS,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,SAAKG,QAAL,CAAc;AACZJ,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADX,KAAd,EAEG,KAAKG,YAFR;AAGD;;AAEDA,EAAAA,YAAY,GAAG;AAEbE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKP,KAAL,CAAWC,SAArC;;AAEA,QAAI,KAAKD,KAAL,CAAWC,SAAf,EAA0B;AACxBP,MAAAA,WAAW,CAACc,KAAZ;;AACAd,MAAAA,WAAW,CAACe,KAAZ,GAAoB,MAAM;AACxBH,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAb,QAAAA,WAAW,CAACc,KAAZ;AACD,OAHD;AAKD,KAPD,MAOO;AACLd,MAAAA,WAAW,CAACgB,IAAZ;;AACAhB,MAAAA,WAAW,CAACe,KAAZ,GAAoB,MAAM;AACxBH,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,OAFD;AAGD;;AAEDb,IAAAA,WAAW,CAACiB,OAAZ,GAAsB,MAAM;AAC1BL,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAFD;;AAIA,QAAIK,iBAAiB,GAAG,EAAxB;;AACAlB,IAAAA,WAAW,CAACmB,QAAZ,GAAuBC,KAAK,IAAI;AAC9B,UAAIC,eAAe,GAAG,EAAtB;;AAEA,WAAK,IAAIC,CAAC,GAAGF,KAAK,CAACG,WAAnB,EAAgCD,CAAC,GAAGF,KAAK,CAACI,OAAN,CAAcC,MAAlD,EAA0DH,CAAC,EAA3D,EAA+D;AAC7D,cAAMI,UAAU,GAAGN,KAAK,CAACI,OAAN,CAAcF,CAAd,EAAiB,CAAjB,EAAoBI,UAAvC;AACA,YAAIN,KAAK,CAACI,OAAN,CAAcF,CAAd,EAAiBK,OAArB,EAA8BT,iBAAiB,IAAIQ,UAAU,GAAG,GAAlC,CAA9B,KACKL,eAAe,IAAIK,UAAnB,CAHwD,CAI7D;AACD;;AACDd,MAAAA,OAAO,CAACC,GAAR,CAAYQ,eAAZ;AACAO,MAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CT,eAA7C,CAV8B,CAY9B;;AAEA,YAAMU,aAAa,GAAGV,eAAe,CAACW,KAAhB,CAAsB,GAAtB,CAAtB;AACA,YAAMC,OAAO,GAAGF,aAAa,CAACG,KAAd,CAAoB,CAAC,CAArB,EAAwB,CAAC,CAAzB,CAAhB;AACAtB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBoB,OAAvB;;AAEA,UAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,MAAf,IAAyBA,OAAO,CAAC,CAAD,CAAP,KAAe,WAA5C,EAAwD;AACtDjC,QAAAA,WAAW,CAACgB,IAAZ;;AACAhB,QAAAA,WAAW,CAACe,KAAZ,GAAoB,MAAM;AACxBH,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,gBAAMsB,SAAS,GAAGJ,aAAa,CAACG,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,EAA2BE,IAA3B,CAAgC,GAAhC,CAAlB;AACAR,UAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6CK,SAA7C;AACD,SAJD;AAKD;AACF,KA1BD,CAvBa,CAmDb;;;AAEAnC,IAAAA,WAAW,CAACqC,OAAZ,GAAsBjB,KAAK,IAAI;AAC7BR,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAoCO,KAAK,CAACkB,KAAtD;AACD,KAFD;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAgD,MAAA,KAAK,EAAEC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,EAAE,EAAC,gBAAX;AAA4B,MAAA,KAAK,EAAEC,MAAnC;AAA2C,MAAA,OAAO,EAAE,KAAKlC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CAFF,eASE;AAAK,MAAA,EAAE,EAAC,OAAR;AAAgB,MAAA,KAAK,EAAEmC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADJ;AAaD;;AA1F4B;;AA6F/B,eAAevC,MAAf,C,CAGA;;AAEA,MAAMwC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,aAAa,EAAE,QAFN;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,SAAS,EAAE;AAJF,GADE;AAObP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,MAAM,EAAE,MAFF;AAGNC,IAAAA,UAAU,EAAE,MAHN;AAINJ,IAAAA,UAAU,EAAE,QAJN,CAKN;AACA;;AANM,GAPK;AAebP,EAAAA,SAAS,EAAC;AACRW,IAAAA,UAAU,EAAE,MADJ;AAERJ,IAAAA,UAAU,EAAE;AAFJ,GAfG;AAoBb;AACA;AACA;AACA;AACA;AACA;AACA;AACAL,EAAAA,KAAK,EAAE;AACLU,IAAAA,KAAK,EAAE,OADF;AAELC,IAAAA,MAAM,EAAE,gBAFH;AAGLC,IAAAA,OAAO,EAAE,KAHJ;AAILC,IAAAA,MAAM,EAAE,KAJH;AAKLN,IAAAA,KAAK,EAAE;AALF;AA3BM,CAAf;AAoCA,MAAM;AAAEL,EAAAA,SAAF;AAAaH,EAAAA,MAAb;AAAqBe,EAAAA,OAArB;AAA8Bd,EAAAA,KAA9B;AAAqCF,EAAAA;AAArC,IAAkDG,MAAxD","sourcesContent":["'use strict'\nimport React, { Component } from \"react\"\nimport logo from './logo.svg';\nimport './App.css';\n\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst recognition = new SpeechRecognition()\n\nrecognition.continous = true\nrecognition.interimResults = true\nrecognition.lang = 'zh-TW'\n\n\n//------------------------COMPONENT-----------------------------\n\nclass Speech extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      listening: false\n    }\n    this.toggleListen = this.toggleListen.bind(this)\n    this.handleListen = this.handleListen.bind(this)\n  }\n\n  toggleListen() {\n    this.setState({\n      listening: !this.state.listening\n    }, this.handleListen)\n  }\n\n  handleListen() {\n\n    console.log('listening?', this.state.listening)\n\n    if (this.state.listening) {\n      recognition.start()\n      recognition.onend = () => {\n        console.log(\"...continue listening...\")\n        recognition.start()\n      }\n\n    } else {\n      recognition.stop()\n      recognition.onend = () => {\n        console.log(\"Stopped listening per click\")\n      }\n    }\n\n    recognition.onstart = () => {\n      console.log(\"Listening!\")\n    }\n\n    let intermiTranscript = ''\n    recognition.onresult = event => {\n      let finalTranscript = ''\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) intermiTranscript += transcript + ' ';\n        else finalTranscript += transcript;\n        // interimTranscript += transcript;\n      }\n      console.log(finalTranscript)\n      document.getElementById('final').innerHTML = finalTranscript\n\n      //-------------------------COMMANDS------------------------------------\n\n      const transcriptArr = finalTranscript.split(' ')\n      const stopCmd = transcriptArr.slice(-3, -1)\n      console.log('stopCmd', stopCmd)\n\n      if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\n        recognition.stop()\n        recognition.onend = () => {\n          console.log('Stopped listening per command')\n          const finalText = transcriptArr.slice(0, -3).join(' ')\n          document.getElementById('final').innerHTML = finalText\n        }\n      }\n    }\n\n    //-----------------------------------------------------------------------\n\n    recognition.onerror = event => {\n      console.log(\"Error occurred in recognition: \" + event.error)\n    }\n\n  }\n\n  render() {\n    return (\n        <div>\n          {/*<button id='microphone-btn' style={button} onClick={this.toggleListen}/>*/}\n          <div>\n            <img src={logo} className=\"App-logo\" alt=\"logo\" style={reactlogo}/>\n            <div>\n              <button id='microphone-btn' style={button} onClick={this.toggleListen} />\n            </div>\n          </div>\n\n          <div id='final' style={final}></div>\n        </div>\n    )\n  }\n}\n\nexport default Speech\n\n\n//-------------------------CSS------------------------------------\n\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  button: {\n    width: '60px',\n    height: '60px',\n    background: 'blue',\n    alignItems: 'center',\n    // borderRadius: '50%',\n    // margin: '6em 0 2em 0'\n  },\n  reactlogo:{\n    background: 'gray',\n    alignItems: 'center',\n\n  },\n  // interim: {\n  //   color: 'gray',\n  //   border: '#ccc 1px solid',\n  //   padding: '1em',\n  //   margin: '1em',\n  //   width: '300px'\n  // },\n  final: {\n    color: 'black',\n    border: '#ccc 1px solid',\n    padding: '1em',\n    margin: '1em',\n    width: '300px'\n  }\n}\n\nconst { container, button, interim, final ,reactlogo} = styles\n\n\n"]},"metadata":{},"sourceType":"module"}