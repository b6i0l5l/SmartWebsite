{"ast":null,"code":"var _jsxFileName = \"/Users/wan/smartplug/src/App.js\";\nimport React from 'react';\nimport SpeechRecognition from 'react-speech-recognition';\nimport $ from 'jquery';\nimport { PropTypes, Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass Dictaphone extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCommand = command => {\n      console.log(command);\n      this.setState({\n        command: command\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentWillMount() {\n    console.log(\"HERE\");\n    const {\n      recognition\n    } = this.props;\n    recognition.lang = 'zh-CN';\n  }\n\n  // function triggerIFTTT(){\n  //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n  // }\n  render() {\n    const {\n      transcript,\n      resetTranscript,\n      browserSupportsSpeechRecognition,\n      set\n    } = this.props; // const setCommand = () => {\n    //   console.log(\"Yes\")\n    // }\n    // const setCommand = () => {\n    //\n    //   var command = {transcript}['transcript']\n    //   if (command === '打開電鍋'){\n    //     console.log(\"set command get!\")\n    //     // $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 30000);\n    //   }\n    //   else if (command === '關閉電鍋'){\n    //     console.log(\"set command get!\")\n    //   //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeroff/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 20000);\n    //   }\n    //   else{\n    //\n    //     console.log(command)\n    //     setTimeout(function() { {resetTranscript()}}, 15000);\n    //   }\n    //\n    // }\n\n    if (!browserSupportsSpeechRecognition) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"you can try it!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: resetTranscript,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, transcript), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.setCommand({\n        transcript\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"Set\")));\n  }\n\n}\n\nexport default SpeechRecognition(Dictaphone);","map":{"version":3,"sources":["/Users/wan/smartplug/src/App.js"],"names":["React","SpeechRecognition","$","PropTypes","Component","Dictaphone","constructor","props","setCommand","command","console","log","setState","state","componentWillMount","recognition","lang","render","transcript","resetTranscript","browserSupportsSpeechRecognition","set","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,OAArC;;AAEA,OAAO,WAAP;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAiBlBC,UAjBkB,GAiBJC,OAAD,IAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,QAAL,CAAc;AACZH,QAAAA,OAAO,EAACA;AADI,OAAd;AAMD,KAzBiB;;AAGhB,SAAKI,KAAL,GAAa,EAAb;AAID;;AAGDC,EAAAA,kBAAkB,GAAG;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAM;AAACI,MAAAA;AAAD,QAAgB,KAAKR,KAA3B;AACAQ,IAAAA,WAAW,CAACC,IAAZ,GAAmB,OAAnB;AAED;;AAYD;AACA;AACA;AAGAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,eAAd;AAA+BC,MAAAA,gCAA/B;AAAiEC,MAAAA;AAAjE,QAAwE,KAAKd,KAAnF,CADO,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI,CAACa,gCAAL,EAAuC;AACrC,aAAO,IAAP;AACD;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEE,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAKE;AAAQ,MAAA,OAAO,EAAEH,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,UAAP,CANF,eAOE;AAAQ,MAAA,OAAO,EAAG,MAAM,KAAKV,UAAL,CAAgB;AAACU,QAAAA;AAAD,OAAhB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPF,CADF,CADJ;AAaD;;AA5EgC;;AAkFnC,eAAejB,iBAAiB,CAACI,UAAD,CAAhC","sourcesContent":["import React from 'react';\nimport SpeechRecognition from 'react-speech-recognition'\nimport $ from 'jquery';\nimport { PropTypes, Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nclass Dictaphone extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n\n    };\n\n  }\n\n\n  componentWillMount() {\n    console.log(\"HERE\")\n    const {recognition} = this.props\n    recognition.lang = 'zh-CN'\n\n  }\n\n  setCommand = (command) =>{\n    console.log(command)\n    this.setState({\n      command:command\n    })\n\n\n\n  }\n\n  // function triggerIFTTT(){\n  //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n  // }\n\n\n  render() {\n    const { transcript, resetTranscript, browserSupportsSpeechRecognition, set} = this.props\n\n    // const setCommand = () => {\n    //   console.log(\"Yes\")\n    // }\n    // const setCommand = () => {\n    //\n    //   var command = {transcript}['transcript']\n    //   if (command === '打開電鍋'){\n    //     console.log(\"set command get!\")\n    //     // $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 30000);\n    //   }\n    //   else if (command === '關閉電鍋'){\n    //     console.log(\"set command get!\")\n    //   //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeroff/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 20000);\n    //   }\n    //   else{\n    //\n    //     console.log(command)\n    //     setTimeout(function() { {resetTranscript()}}, 15000);\n    //   }\n    //\n    // }\n    if (!browserSupportsSpeechRecognition) {\n      return null\n    }\n\n    return (\n        <div className=\"App\">\n          <header >\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              you can try it!\n            </p>\n            <button onClick={resetTranscript}>Reset</button>\n            <span>{transcript}</span>\n            <button onClick={ () => this.setCommand({transcript})}>Set</button>\n          </header>\n        </div>\n    )\n  }\n\n\n\n}\n\nexport default SpeechRecognition(Dictaphone)\n\n\n\n"]},"metadata":{},"sourceType":"module"}