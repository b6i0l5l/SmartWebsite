{"ast":null,"code":"var _jsxFileName = \"/Users/wan/smartplug/src/App.js\";\n// import React from 'react';\n// import SpeechRecognition from 'react-speech-recognition'\n// import PropTypes from \"prop-types\";\n// import logo from './logo.svg';\n// import './App.css';\n//\n// const propTypes = {\n//   // Props injected by SpeechRecognition\n//   transcript: PropTypes.string,\n//   resetTranscript: PropTypes.func,\n//   browserSupportsSpeechRecognition: PropTypes.bool\n// };\n//\n//\n// const Dictaphone = ({\n//                       transcript,\n//                       resetTranscript,\n//                       browserSupportsSpeechRecognition\n//                     }) => {\n//   if (!browserSupportsSpeechRecognition) {\n//     return null;\n//   }\n//\n//   return (\n\n/*#__PURE__*/\nReact.createElement(\"div\", {\n  className: \"App\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(\"header\", {\n  className: \"App-header\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  src: logo,\n  className: \"App-logo\",\n  alt: \"logo\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 11\n  }\n}), /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 11\n  }\n}, \"you can try it!\"), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: resetTranscript,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 11\n  }\n}, \"Reset\"), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 11\n  }\n}, transcript))); //\n//   );\n// };\n//\n// Dictaphone.propTypes = propTypes;\n//\n// export default SpeechRecognition(Dictaphone);\n//\n\nimport React, { Component } from 'react';\nimport SpeechRecognition from 'react-speech-recognition';\n\nclass Dictaphone extends Component {\n  componentWillMount() {\n    const {\n      recognition\n    } = this.props;\n    recognition.lang = 'zh-CN';\n  }\n\n  render() {\n    const {\n      transcript,\n      resetTranscript,\n      browserSupportsSpeechRecognition\n    } = this.props;\n\n    if (!browserSupportsSpeechRecognition) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"you can try it!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: resetTranscript,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, transcript)));\n  }\n\n}\n\nexport default SpeechRecognition(Dictaphone);","map":{"version":3,"sources":["/Users/wan/smartplug/src/App.js"],"names":["logo","resetTranscript","transcript","React","Component","SpeechRecognition","Dictaphone","componentWillMount","recognition","props","lang","render","browserSupportsSpeechRecognition"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACM;AAAA;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAQ,EAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAK,EAAA,GAAG,EAAEA,IAAV;AAAgB,EAAA,SAAS,EAAC,UAA1B;AAAqC,EAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,eAKE;AAAQ,EAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOC,UAAP,CANF,CADF,E,CAWN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKC,KAA3B;AACAD,IAAAA,WAAW,CAACE,IAAZ,GAAmB,OAAnB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,UAAF;AAAcD,MAAAA,eAAd;AAA+BW,MAAAA;AAA/B,QAAoE,KAAKH,KAA/E;;AAEA,QAAI,CAACG,gCAAL,EAAuC;AACrC,aAAO,IAAP;AACD;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEZ,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,eAKE;AAAQ,MAAA,OAAO,EAAEC,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOC,UAAP,CANF,CADF,CADJ;AAaD;;AAzBgC;;AA4BnC,eAAeG,iBAAiB,CAACC,UAAD,CAAhC","sourcesContent":["// import React from 'react';\n// import SpeechRecognition from 'react-speech-recognition'\n// import PropTypes from \"prop-types\";\n// import logo from './logo.svg';\n// import './App.css';\n//\n// const propTypes = {\n//   // Props injected by SpeechRecognition\n//   transcript: PropTypes.string,\n//   resetTranscript: PropTypes.func,\n//   browserSupportsSpeechRecognition: PropTypes.bool\n// };\n//\n//\n// const Dictaphone = ({\n//                       transcript,\n//                       resetTranscript,\n//                       browserSupportsSpeechRecognition\n//                     }) => {\n//   if (!browserSupportsSpeechRecognition) {\n//     return null;\n//   }\n//\n//   return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            you can try it!\n          </p>\n          <button onClick={resetTranscript}>Reset</button>\n          <span>{transcript}</span>\n        </header>\n\n      </div>\n//\n//   );\n// };\n//\n// Dictaphone.propTypes = propTypes;\n//\n// export default SpeechRecognition(Dictaphone);\n//\nimport React, {Component } from 'react'\nimport SpeechRecognition from 'react-speech-recognition'\n\nclass Dictaphone extends Component {\n  componentWillMount() {\n    const {recognition} = this.props\n    recognition.lang = 'zh-CN'\n  }\n  render() {\n    const { transcript, resetTranscript, browserSupportsSpeechRecognition } = this.props\n\n    if (!browserSupportsSpeechRecognition) {\n      return null\n    }\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              you can try it!\n            </p>\n            <button onClick={resetTranscript}>Reset</button>\n            <span>{transcript}</span>\n          </header>\n\n        </div>\n    )\n  }\n}\n\nexport default SpeechRecognition(Dictaphone)"]},"metadata":{},"sourceType":"module"}