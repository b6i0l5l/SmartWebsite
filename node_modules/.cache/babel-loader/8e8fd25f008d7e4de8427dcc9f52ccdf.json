{"ast":null,"code":"var _jsxFileName = \"/Users/wan/smartplug/src/App.js\";\nimport React from 'react';\nimport SpeechRecognition from 'react-speech-recognition';\nimport $ from 'jquery';\nimport { PropTypes, Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  resetTranscript: PropTypes.func,\n  transcript: PropTypes.string,\n  startListening: PropTypes.func,\n  stopListening: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n};\n\nclass Dictaphone extends Component {\n  constructor(props) {\n    super(props);\n\n    this.trigger = () => {\n      console.log(\"Pretty\");\n    };\n\n    this.state = {\n      command: ''\n    };\n  }\n\n  componentWillMount() {\n    console.log(\"HERE\");\n    const {\n      recognition\n    } = this.props;\n    recognition.lang = 'zh-CN';\n    this.trigger();\n  } // function triggerIFTTT(){\n  //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n  // }\n\n\n  render() {\n    const {\n      transcript,\n      resetTranscript,\n      browserSupportsSpeechRecognition,\n      set\n    } = this.props; // const setCommand = () => {\n    //\n    //   var command = {transcript}['transcript']\n    //   if (command === '打開電鍋'){\n    //     console.log(\"set command get!\")\n    //     // $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 30000);\n    //   }\n    //   else if (command === '關閉電鍋'){\n    //     console.log(\"set command get!\")\n    //   //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeroff/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 20000);\n    //   }\n    //   else{\n    //\n    //     console.log(command)\n    //     setTimeout(function() { {resetTranscript()}}, 15000);\n    //   }\n    //\n    // }\n\n    if (!browserSupportsSpeechRecognition) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"you can try it! \\u4F60\\u597D\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: resetTranscript,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, transcript)));\n  }\n\n}\n\nexport default SpeechRecognition(Dictaphone);","map":{"version":3,"sources":["/Users/wan/smartplug/src/App.js"],"names":["React","SpeechRecognition","$","PropTypes","Component","propTypes","resetTranscript","func","transcript","string","startListening","stopListening","browserSupportsSpeechRecognition","bool","Dictaphone","constructor","props","trigger","console","log","state","command","componentWillMount","recognition","lang","render","set","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,OAArC;;AAEA,OAAO,WAAP;AAEA,MAAMC,SAAS,GAAG;AAChB;AACAC,EAAAA,eAAe,EAACH,SAAS,CAACI,IAFV;AAGhBC,EAAAA,UAAU,EAAEL,SAAS,CAACM,MAHN;AAIhBC,EAAAA,cAAc,EAAEP,SAAS,CAACI,IAJV;AAKhBI,EAAAA,aAAa,EAAER,SAAS,CAACI,IALT;AAMhBK,EAAAA,gCAAgC,EAAET,SAAS,CAACU;AAN5B,CAAlB;;AAQA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AACjCW,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,OATkB,GASR,MAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,KAXiB;;AAGhB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAK;AADD,KAAb;AAID;;AAKDC,EAAAA,kBAAkB,GAAG;AACnBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAM;AAACI,MAAAA;AAAD,QAAgB,KAAKP,KAA3B;AACAO,IAAAA,WAAW,CAACC,IAAZ,GAAmB,OAAnB;AACA,SAAKP,OAAL;AACD,GAlBgC,CAsBjC;AACA;AACA;;;AAGAQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,UAAF;AAAcF,MAAAA,eAAd;AAA+BM,MAAAA,gCAA/B;AAAiEc,MAAAA;AAAjE,QAAwE,KAAKV,KAAnF,CADO,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI,CAACJ,gCAAL,EAAuC;AACrC,aAAO,IAAP;AACD;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEe,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,eAKE;AAAQ,MAAA,OAAO,EAAErB,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOE,UAAP,CANF,CADF,CADJ;AAYD;;AAlEgC;;AAwEnC,eAAeP,iBAAiB,CAACa,UAAD,CAAhC","sourcesContent":["import React from 'react';\nimport SpeechRecognition from 'react-speech-recognition'\nimport $ from 'jquery';\nimport { PropTypes, Component } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  resetTranscript:PropTypes.func,\n  transcript: PropTypes.string,\n  startListening: PropTypes.func,\n  stopListening: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n}\nclass Dictaphone extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      command   : '',\n    };\n\n  }\n\n  trigger = () => {\n    console.log(\"Pretty\")\n  }\n  componentWillMount() {\n    console.log(\"HERE\")\n    const {recognition} = this.props\n    recognition.lang = 'zh-CN'\n    this.trigger()\n  }\n\n\n\n  // function triggerIFTTT(){\n  //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n  // }\n\n\n  render() {\n    const { transcript, resetTranscript, browserSupportsSpeechRecognition, set} = this.props\n\n    // const setCommand = () => {\n    //\n    //   var command = {transcript}['transcript']\n    //   if (command === '打開電鍋'){\n    //     console.log(\"set command get!\")\n    //     // $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 30000);\n    //   }\n    //   else if (command === '關閉電鍋'){\n    //     console.log(\"set command get!\")\n    //   //   $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeroff/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n    //     setTimeout(function() { {resetTranscript()}}, 20000);\n    //   }\n    //   else{\n    //\n    //     console.log(command)\n    //     setTimeout(function() { {resetTranscript()}}, 15000);\n    //   }\n    //\n    // }\n    if (!browserSupportsSpeechRecognition) {\n      return null\n    }\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>\n              you can try it! 你好\n            </p>\n            <button onClick={resetTranscript}>Reset</button>\n            <span>{transcript}</span>\n          </header>\n        </div>\n    )\n  }\n\n\n\n}\n\nexport default SpeechRecognition(Dictaphone)\n\n"]},"metadata":{},"sourceType":"module"}