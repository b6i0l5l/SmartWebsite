{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/wan/smartplug/src/App.js\";\nimport React, { Component } from \"react\";\nimport $ from 'jquery';\nimport logo from \"./logo.svg\";\nimport './App.css'; //------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\nconst recognition = new SpeechRecognition();\nrecognition.continous = true;\nrecognition.interimResults = true;\nrecognition.lang = 'zh-TW'; //------------------------COMPONENT-----------------------------\n\nclass Speech extends Component {\n  constructor() {\n    super();\n    this.state = {\n      listening: false,\n      bgcolor: '#282c34'\n    };\n    this.toggleListen = this.toggleListen.bind(this);\n    this.handleListen = this.handleListen.bind(this);\n  }\n\n  toggleListen() {\n    this.setState({\n      listening: !this.state.listening\n    }, this.handleListen);\n  }\n\n  handleListen() {\n    console.log('listening?', this.state.listening);\n\n    if (this.state.listening) {\n      recognition.start();\n\n      recognition.onend = () => {\n        console.log(\"...continue listening...\");\n        recognition.start();\n      };\n    } else {\n      recognition.stop();\n\n      recognition.onend = () => {\n        console.log(\"Stopped listening per click\");\n      };\n    }\n\n    recognition.onstart = () => {\n      console.log(\"Listening!\");\n      this.setState({\n        bgcolor: '#282c34'\n      });\n    };\n\n    let intermiTranscript = '';\n\n    recognition.onresult = event => {\n      let finalTranscript = '';\n\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) intermiTranscript += transcript + ' ';else finalTranscript += transcript;\n      }\n\n      console.log(finalTranscript);\n\n      if (finalTranscript === \"開始煮飯\") {\n        console.log(\"指令成功！\");\n        this.setState({\n          bgcolor: '#006400'\n        });\n        $.ajax({\n          url: \"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",\n          data: {\n            \"value1\": \"rice cooker on\"\n          },\n          success: function (result) {\n            alert(result);\n          }\n        });\n      } else if (finalTranscript === \"關掉電源\") {\n        console.log(\"指令成功！\");\n        this.setState({\n          bgcolor: '#006400'\n        });\n        $.ajax({\n          url: \"https://maker.ifttt.com/trigger/ricecookeroff/with/key/dyMeTmyKz4_uQNNPyqZABx\",\n          success: function (result) {\n            alert(result);\n          }\n        });\n      }\n\n      document.getElementById('final').innerHTML = finalTranscript; //-------------------------COMMANDS------------------------------------\n\n      const transcriptArr = finalTranscript.split(' ');\n      const stopCmd = transcriptArr.slice(-3, -1);\n      console.log('stopCmd', stopCmd);\n\n      if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening') {\n        recognition.stop();\n\n        recognition.onend = () => {\n          console.log('Stopped listening per command');\n          const finalText = transcriptArr.slice(0, -3).join(' ');\n          document.getElementById('final').innerHTML = finalText;\n        };\n      }\n    }; //-----------------------------------------------------------------------\n\n\n    recognition.onerror = event => {\n      console.log(\"Error occurred in recognition: \" + event.error);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      style: {\n        backgroundColor: this.state.bgcolor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"microphone-btn\",\n      style: button,\n      onClick: this.toggleListen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"final\",\n      style: final,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Speech; //-------------------------CSS------------------------------------\n\nconst styles = {\n  container: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  body: {\n    background: 'black'\n  },\n  button: {\n    background: 'transparent',\n    borderWidth: 0\n  },\n  final: {\n    color: 'white',\n    borderWidth: 0,\n    padding: '1em',\n    margin: '1em',\n    width: '300px',\n    textAlign: 'center'\n  }\n};\nconst {\n  container,\n  button,\n  final,\n  body\n} = styles;","map":{"version":3,"sources":["/Users/wan/smartplug/src/App.js"],"names":["React","Component","$","SpeechRecognition","window","webkitSpeechRecognition","recognition","continous","interimResults","lang","Speech","constructor","state","listening","bgcolor","toggleListen","bind","handleListen","setState","console","log","start","onend","stop","onstart","intermiTranscript","onresult","event","finalTranscript","i","resultIndex","results","length","transcript","isFinal","ajax","url","data","success","result","alert","document","getElementById","innerHTML","transcriptArr","split","stopCmd","slice","finalText","join","onerror","error","render","container","backgroundColor","button","logo","final","styles","flexDirection","alignItems","textAlign","body","background","borderWidth","color","padding","margin","width"],"mappings":"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","sourcesContent":["'use strict'\nimport React, { Component } from \"react\"\nimport $ from 'jquery';\nimport logo from './logo.svg';\nimport './App.css';\n\n\n//------------------------SPEECH RECOGNITION-----------------------------\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst recognition = new SpeechRecognition()\n\nrecognition.continous = true\nrecognition.interimResults = true\nrecognition.lang = 'zh-TW'\n\n\n//------------------------COMPONENT-----------------------------\n\nclass Speech extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      listening: false,\n      bgcolor:'#282c34'\n    }\n    this.toggleListen = this.toggleListen.bind(this)\n    this.handleListen = this.handleListen.bind(this)\n  }\n\n  toggleListen() {\n    this.setState({\n      listening: !this.state.listening\n    }, this.handleListen)\n  }\n\n  handleListen() {\n\n    console.log('listening?', this.state.listening)\n\n    if (this.state.listening) {\n      recognition.start()\n      recognition.onend = () => {\n        console.log(\"...continue listening...\")\n        recognition.start()\n      }\n\n    } else {\n      recognition.stop()\n      recognition.onend = () => {\n        console.log(\"Stopped listening per click\")\n      }\n    }\n\n    recognition.onstart = () => {\n      console.log(\"Listening!\")\n      this.setState({\n        bgcolor:'#282c34'\n      })\n    }\n\n    let intermiTranscript = ''\n    recognition.onresult = event => {\n      let finalTranscript = ''\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcript = event.results[i][0].transcript;\n        if (event.results[i].isFinal) intermiTranscript += transcript + ' ';\n        else finalTranscript += transcript;\n      }\n      console.log(finalTranscript)\n      if (finalTranscript === \"開始煮飯\"){\n        console.log(\"指令成功！\")\n        this.setState({\n          bgcolor:'#006400'\n        })\n        $.ajax({\n          url:\"https://maker.ifttt.com/trigger/ricecookeron/with/key/dyMeTmyKz4_uQNNPyqZABx\",\n          data: {\"value1\":\"rice cooker on\"},\n          success:function(result){alert(result)}\n        })\n      }\n      else if(finalTranscript === \"關掉電源\"){\n        console.log(\"指令成功！\")\n        this.setState({\n          bgcolor:'#006400'\n        })\n        $.ajax({url:\"https://maker.ifttt.com/trigger/ricecookeroff/with/key/dyMeTmyKz4_uQNNPyqZABx\",success:function(result){alert(result)}})\n      }\n      document.getElementById('final').innerHTML = finalTranscript\n\n      //-------------------------COMMANDS------------------------------------\n\n      const transcriptArr = finalTranscript.split(' ')\n      const stopCmd = transcriptArr.slice(-3, -1)\n      console.log('stopCmd', stopCmd)\n\n      if (stopCmd[0] === 'stop' && stopCmd[1] === 'listening'){\n        recognition.stop()\n        recognition.onend = () => {\n          console.log('Stopped listening per command')\n          const finalText = transcriptArr.slice(0, -3).join(' ')\n          document.getElementById('final').innerHTML = finalText\n        }\n      }\n    }\n\n    //-----------------------------------------------------------------------\n\n    recognition.onerror = event => {\n      console.log(\"Error occurred in recognition: \" + event.error)\n    }\n\n  }\n\n  render() {\n    return (\n        <div style={container}>\n          <header className=\"App-header\" style={{backgroundColor: this.state.bgcolor}}>\n            <button id='microphone-btn' style={button} onClick={this.toggleListen}>\n              <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            </button>\n            <div id='final' style={final}></div>\n          </header>\n        </div>\n    )\n  }\n}\n\nexport default Speech\n\n\n//-------------------------CSS------------------------------------\n\nconst styles = {\n  container: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  body: {\n    background: 'black'\n  },\n  button: {\n    background: 'transparent',\n    borderWidth:0\n  },\n  final: {\n    color: 'white',\n    borderWidth:0,\n    padding: '1em',\n    margin: '1em',\n    width: '300px',\n    textAlign: 'center'\n  }\n}\n\nconst { container, button, final, body} = styles\n\n\n"]},"metadata":{},"sourceType":"module"}